/**
 * generated by Xtext 2.9.1
 */
package hu.bme.mit.modes3.test.testLanguage;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see hu.bme.mit.modes3.test.testLanguage.TestLanguageFactory
 * @model kind="package"
 * @generated
 */
public interface TestLanguagePackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "testLanguage";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.bme.hu/mit/modes3/test/TestLanguage";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "testLanguage";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  TestLanguagePackage eINSTANCE = hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl.init();

  /**
   * The meta object id for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.modes3.test.testLanguage.impl.ModelImpl
   * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Initial State</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__INITIAL_STATE = 0;

  /**
   * The feature id for the '<em><b>Case Description</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__CASE_DESCRIPTION = 1;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.InitialStateImpl <em>Initial State</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.modes3.test.testLanguage.impl.InitialStateImpl
   * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getInitialState()
   * @generated
   */
  int INITIAL_STATE = 1;

  /**
   * The feature id for the '<em><b>Turnout ID</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INITIAL_STATE__TURNOUT_ID = 0;

  /**
   * The feature id for the '<em><b>Turnout</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INITIAL_STATE__TURNOUT = 1;

  /**
   * The number of structural features of the '<em>Initial State</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INITIAL_STATE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.CaseDescriptionImpl <em>Case Description</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.modes3.test.testLanguage.impl.CaseDescriptionImpl
   * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getCaseDescription()
   * @generated
   */
  int CASE_DESCRIPTION = 2;

  /**
   * The feature id for the '<em><b>Case Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_DESCRIPTION__CASE_NAME = 0;

  /**
   * The feature id for the '<em><b>Steps</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_DESCRIPTION__STEPS = 1;

  /**
   * The feature id for the '<em><b>Expect</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_DESCRIPTION__EXPECT = 2;

  /**
   * The number of structural features of the '<em>Case Description</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_DESCRIPTION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.CaseNameImpl <em>Case Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.modes3.test.testLanguage.impl.CaseNameImpl
   * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getCaseName()
   * @generated
   */
  int CASE_NAME = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_NAME__NAME = 0;

  /**
   * The number of structural features of the '<em>Case Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_NAME_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.StepsImpl <em>Steps</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.modes3.test.testLanguage.impl.StepsImpl
   * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getSteps()
   * @generated
   */
  int STEPS = 4;

  /**
   * The feature id for the '<em><b>Comment</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STEPS__COMMENT = 0;

  /**
   * The feature id for the '<em><b>Changed Turnout</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STEPS__CHANGED_TURNOUT = 1;

  /**
   * The feature id for the '<em><b>Section</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STEPS__SECTION = 2;

  /**
   * The number of structural features of the '<em>Steps</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STEPS_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.CommentImpl <em>Comment</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.modes3.test.testLanguage.impl.CommentImpl
   * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getComment()
   * @generated
   */
  int COMMENT = 5;

  /**
   * The feature id for the '<em><b>Comment</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMENT__COMMENT = 0;

  /**
   * The number of structural features of the '<em>Comment</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMENT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.TurnoutImpl <em>Turnout</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.modes3.test.testLanguage.impl.TurnoutImpl
   * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getTurnout()
   * @generated
   */
  int TURNOUT = 6;

  /**
   * The feature id for the '<em><b>Turnout State</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TURNOUT__TURNOUT_STATE = 0;

  /**
   * The number of structural features of the '<em>Turnout</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TURNOUT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.SectionImpl <em>Section</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.modes3.test.testLanguage.impl.SectionImpl
   * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getSection()
   * @generated
   */
  int SECTION = 7;

  /**
   * The feature id for the '<em><b>Straight Section</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SECTION__STRAIGHT_SECTION = 0;

  /**
   * The feature id for the '<em><b>Divergent Section</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SECTION__DIVERGENT_SECTION = 1;

  /**
   * The feature id for the '<em><b>Top Section</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SECTION__TOP_SECTION = 2;

  /**
   * The number of structural features of the '<em>Section</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SECTION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.StraightSectionImpl <em>Straight Section</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.modes3.test.testLanguage.impl.StraightSectionImpl
   * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getStraightSection()
   * @generated
   */
  int STRAIGHT_SECTION = 8;

  /**
   * The feature id for the '<em><b>Straight Section State</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRAIGHT_SECTION__STRAIGHT_SECTION_STATE = 0;

  /**
   * The number of structural features of the '<em>Straight Section</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRAIGHT_SECTION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.DivergentSectionImpl <em>Divergent Section</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.modes3.test.testLanguage.impl.DivergentSectionImpl
   * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getDivergentSection()
   * @generated
   */
  int DIVERGENT_SECTION = 9;

  /**
   * The feature id for the '<em><b>Divergent Section State</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVERGENT_SECTION__DIVERGENT_SECTION_STATE = 0;

  /**
   * The number of structural features of the '<em>Divergent Section</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVERGENT_SECTION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.TopSectionImpl <em>Top Section</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.modes3.test.testLanguage.impl.TopSectionImpl
   * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getTopSection()
   * @generated
   */
  int TOP_SECTION = 10;

  /**
   * The feature id for the '<em><b>Top Section State</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TOP_SECTION__TOP_SECTION_STATE = 0;

  /**
   * The number of structural features of the '<em>Top Section</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TOP_SECTION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.ExpectationsImpl <em>Expectations</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.modes3.test.testLanguage.impl.ExpectationsImpl
   * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getExpectations()
   * @generated
   */
  int EXPECTATIONS = 11;

  /**
   * The feature id for the '<em><b>Straight Expectation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPECTATIONS__STRAIGHT_EXPECTATION = 0;

  /**
   * The feature id for the '<em><b>Divergent Expectation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPECTATIONS__DIVERGENT_EXPECTATION = 1;

  /**
   * The feature id for the '<em><b>Top Expectation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPECTATIONS__TOP_EXPECTATION = 2;

  /**
   * The number of structural features of the '<em>Expectations</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPECTATIONS_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.StraightExpectationImpl <em>Straight Expectation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.modes3.test.testLanguage.impl.StraightExpectationImpl
   * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getStraightExpectation()
   * @generated
   */
  int STRAIGHT_EXPECTATION = 12;

  /**
   * The feature id for the '<em><b>Straight Expected State</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRAIGHT_EXPECTATION__STRAIGHT_EXPECTED_STATE = 0;

  /**
   * The number of structural features of the '<em>Straight Expectation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRAIGHT_EXPECTATION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.DivergentExpectationImpl <em>Divergent Expectation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.modes3.test.testLanguage.impl.DivergentExpectationImpl
   * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getDivergentExpectation()
   * @generated
   */
  int DIVERGENT_EXPECTATION = 13;

  /**
   * The feature id for the '<em><b>Divergent Expected State</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVERGENT_EXPECTATION__DIVERGENT_EXPECTED_STATE = 0;

  /**
   * The number of structural features of the '<em>Divergent Expectation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVERGENT_EXPECTATION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.TopExpectationImpl <em>Top Expectation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see hu.bme.mit.modes3.test.testLanguage.impl.TopExpectationImpl
   * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getTopExpectation()
   * @generated
   */
  int TOP_EXPECTATION = 14;

  /**
   * The feature id for the '<em><b>Top Expected State</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TOP_EXPECTATION__TOP_EXPECTED_STATE = 0;

  /**
   * The number of structural features of the '<em>Top Expectation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TOP_EXPECTATION_FEATURE_COUNT = 1;


  /**
   * Returns the meta object for class '{@link hu.bme.mit.modes3.test.testLanguage.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference '{@link hu.bme.mit.modes3.test.testLanguage.Model#getInitialState <em>Initial State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Initial State</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.Model#getInitialState()
   * @see #getModel()
   * @generated
   */
  EReference getModel_InitialState();

  /**
   * Returns the meta object for the containment reference list '{@link hu.bme.mit.modes3.test.testLanguage.Model#getCaseDescription <em>Case Description</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Case Description</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.Model#getCaseDescription()
   * @see #getModel()
   * @generated
   */
  EReference getModel_CaseDescription();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.modes3.test.testLanguage.InitialState <em>Initial State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Initial State</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.InitialState
   * @generated
   */
  EClass getInitialState();

  /**
   * Returns the meta object for the attribute '{@link hu.bme.mit.modes3.test.testLanguage.InitialState#getTurnoutID <em>Turnout ID</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Turnout ID</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.InitialState#getTurnoutID()
   * @see #getInitialState()
   * @generated
   */
  EAttribute getInitialState_TurnoutID();

  /**
   * Returns the meta object for the containment reference '{@link hu.bme.mit.modes3.test.testLanguage.InitialState#getTurnout <em>Turnout</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Turnout</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.InitialState#getTurnout()
   * @see #getInitialState()
   * @generated
   */
  EReference getInitialState_Turnout();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.modes3.test.testLanguage.CaseDescription <em>Case Description</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Case Description</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.CaseDescription
   * @generated
   */
  EClass getCaseDescription();

  /**
   * Returns the meta object for the containment reference '{@link hu.bme.mit.modes3.test.testLanguage.CaseDescription#getCaseName <em>Case Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Case Name</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.CaseDescription#getCaseName()
   * @see #getCaseDescription()
   * @generated
   */
  EReference getCaseDescription_CaseName();

  /**
   * Returns the meta object for the containment reference '{@link hu.bme.mit.modes3.test.testLanguage.CaseDescription#getSteps <em>Steps</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Steps</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.CaseDescription#getSteps()
   * @see #getCaseDescription()
   * @generated
   */
  EReference getCaseDescription_Steps();

  /**
   * Returns the meta object for the containment reference '{@link hu.bme.mit.modes3.test.testLanguage.CaseDescription#getExpect <em>Expect</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expect</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.CaseDescription#getExpect()
   * @see #getCaseDescription()
   * @generated
   */
  EReference getCaseDescription_Expect();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.modes3.test.testLanguage.CaseName <em>Case Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Case Name</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.CaseName
   * @generated
   */
  EClass getCaseName();

  /**
   * Returns the meta object for the attribute '{@link hu.bme.mit.modes3.test.testLanguage.CaseName#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.CaseName#getName()
   * @see #getCaseName()
   * @generated
   */
  EAttribute getCaseName_Name();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.modes3.test.testLanguage.Steps <em>Steps</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Steps</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.Steps
   * @generated
   */
  EClass getSteps();

  /**
   * Returns the meta object for the containment reference '{@link hu.bme.mit.modes3.test.testLanguage.Steps#getComment <em>Comment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Comment</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.Steps#getComment()
   * @see #getSteps()
   * @generated
   */
  EReference getSteps_Comment();

  /**
   * Returns the meta object for the containment reference '{@link hu.bme.mit.modes3.test.testLanguage.Steps#getChangedTurnout <em>Changed Turnout</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Changed Turnout</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.Steps#getChangedTurnout()
   * @see #getSteps()
   * @generated
   */
  EReference getSteps_ChangedTurnout();

  /**
   * Returns the meta object for the containment reference list '{@link hu.bme.mit.modes3.test.testLanguage.Steps#getSection <em>Section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Section</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.Steps#getSection()
   * @see #getSteps()
   * @generated
   */
  EReference getSteps_Section();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.modes3.test.testLanguage.Comment <em>Comment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Comment</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.Comment
   * @generated
   */
  EClass getComment();

  /**
   * Returns the meta object for the attribute '{@link hu.bme.mit.modes3.test.testLanguage.Comment#getComment <em>Comment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Comment</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.Comment#getComment()
   * @see #getComment()
   * @generated
   */
  EAttribute getComment_Comment();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.modes3.test.testLanguage.Turnout <em>Turnout</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Turnout</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.Turnout
   * @generated
   */
  EClass getTurnout();

  /**
   * Returns the meta object for the attribute '{@link hu.bme.mit.modes3.test.testLanguage.Turnout#getTurnoutState <em>Turnout State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Turnout State</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.Turnout#getTurnoutState()
   * @see #getTurnout()
   * @generated
   */
  EAttribute getTurnout_TurnoutState();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.modes3.test.testLanguage.Section <em>Section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Section</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.Section
   * @generated
   */
  EClass getSection();

  /**
   * Returns the meta object for the containment reference '{@link hu.bme.mit.modes3.test.testLanguage.Section#getStraightSection <em>Straight Section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Straight Section</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.Section#getStraightSection()
   * @see #getSection()
   * @generated
   */
  EReference getSection_StraightSection();

  /**
   * Returns the meta object for the containment reference '{@link hu.bme.mit.modes3.test.testLanguage.Section#getDivergentSection <em>Divergent Section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Divergent Section</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.Section#getDivergentSection()
   * @see #getSection()
   * @generated
   */
  EReference getSection_DivergentSection();

  /**
   * Returns the meta object for the containment reference '{@link hu.bme.mit.modes3.test.testLanguage.Section#getTopSection <em>Top Section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Top Section</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.Section#getTopSection()
   * @see #getSection()
   * @generated
   */
  EReference getSection_TopSection();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.modes3.test.testLanguage.StraightSection <em>Straight Section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Straight Section</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.StraightSection
   * @generated
   */
  EClass getStraightSection();

  /**
   * Returns the meta object for the attribute '{@link hu.bme.mit.modes3.test.testLanguage.StraightSection#getStraightSectionState <em>Straight Section State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Straight Section State</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.StraightSection#getStraightSectionState()
   * @see #getStraightSection()
   * @generated
   */
  EAttribute getStraightSection_StraightSectionState();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.modes3.test.testLanguage.DivergentSection <em>Divergent Section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Divergent Section</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.DivergentSection
   * @generated
   */
  EClass getDivergentSection();

  /**
   * Returns the meta object for the attribute '{@link hu.bme.mit.modes3.test.testLanguage.DivergentSection#getDivergentSectionState <em>Divergent Section State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Divergent Section State</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.DivergentSection#getDivergentSectionState()
   * @see #getDivergentSection()
   * @generated
   */
  EAttribute getDivergentSection_DivergentSectionState();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.modes3.test.testLanguage.TopSection <em>Top Section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Top Section</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.TopSection
   * @generated
   */
  EClass getTopSection();

  /**
   * Returns the meta object for the attribute '{@link hu.bme.mit.modes3.test.testLanguage.TopSection#getTopSectionState <em>Top Section State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Top Section State</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.TopSection#getTopSectionState()
   * @see #getTopSection()
   * @generated
   */
  EAttribute getTopSection_TopSectionState();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.modes3.test.testLanguage.Expectations <em>Expectations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expectations</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.Expectations
   * @generated
   */
  EClass getExpectations();

  /**
   * Returns the meta object for the containment reference '{@link hu.bme.mit.modes3.test.testLanguage.Expectations#getStraightExpectation <em>Straight Expectation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Straight Expectation</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.Expectations#getStraightExpectation()
   * @see #getExpectations()
   * @generated
   */
  EReference getExpectations_StraightExpectation();

  /**
   * Returns the meta object for the containment reference '{@link hu.bme.mit.modes3.test.testLanguage.Expectations#getDivergentExpectation <em>Divergent Expectation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Divergent Expectation</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.Expectations#getDivergentExpectation()
   * @see #getExpectations()
   * @generated
   */
  EReference getExpectations_DivergentExpectation();

  /**
   * Returns the meta object for the containment reference '{@link hu.bme.mit.modes3.test.testLanguage.Expectations#getTopExpectation <em>Top Expectation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Top Expectation</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.Expectations#getTopExpectation()
   * @see #getExpectations()
   * @generated
   */
  EReference getExpectations_TopExpectation();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.modes3.test.testLanguage.StraightExpectation <em>Straight Expectation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Straight Expectation</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.StraightExpectation
   * @generated
   */
  EClass getStraightExpectation();

  /**
   * Returns the meta object for the attribute '{@link hu.bme.mit.modes3.test.testLanguage.StraightExpectation#getStraightExpectedState <em>Straight Expected State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Straight Expected State</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.StraightExpectation#getStraightExpectedState()
   * @see #getStraightExpectation()
   * @generated
   */
  EAttribute getStraightExpectation_StraightExpectedState();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.modes3.test.testLanguage.DivergentExpectation <em>Divergent Expectation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Divergent Expectation</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.DivergentExpectation
   * @generated
   */
  EClass getDivergentExpectation();

  /**
   * Returns the meta object for the attribute '{@link hu.bme.mit.modes3.test.testLanguage.DivergentExpectation#getDivergentExpectedState <em>Divergent Expected State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Divergent Expected State</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.DivergentExpectation#getDivergentExpectedState()
   * @see #getDivergentExpectation()
   * @generated
   */
  EAttribute getDivergentExpectation_DivergentExpectedState();

  /**
   * Returns the meta object for class '{@link hu.bme.mit.modes3.test.testLanguage.TopExpectation <em>Top Expectation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Top Expectation</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.TopExpectation
   * @generated
   */
  EClass getTopExpectation();

  /**
   * Returns the meta object for the attribute '{@link hu.bme.mit.modes3.test.testLanguage.TopExpectation#getTopExpectedState <em>Top Expected State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Top Expected State</em>'.
   * @see hu.bme.mit.modes3.test.testLanguage.TopExpectation#getTopExpectedState()
   * @see #getTopExpectation()
   * @generated
   */
  EAttribute getTopExpectation_TopExpectedState();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  TestLanguageFactory getTestLanguageFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.modes3.test.testLanguage.impl.ModelImpl
     * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Initial State</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__INITIAL_STATE = eINSTANCE.getModel_InitialState();

    /**
     * The meta object literal for the '<em><b>Case Description</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__CASE_DESCRIPTION = eINSTANCE.getModel_CaseDescription();

    /**
     * The meta object literal for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.InitialStateImpl <em>Initial State</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.modes3.test.testLanguage.impl.InitialStateImpl
     * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getInitialState()
     * @generated
     */
    EClass INITIAL_STATE = eINSTANCE.getInitialState();

    /**
     * The meta object literal for the '<em><b>Turnout ID</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INITIAL_STATE__TURNOUT_ID = eINSTANCE.getInitialState_TurnoutID();

    /**
     * The meta object literal for the '<em><b>Turnout</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INITIAL_STATE__TURNOUT = eINSTANCE.getInitialState_Turnout();

    /**
     * The meta object literal for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.CaseDescriptionImpl <em>Case Description</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.modes3.test.testLanguage.impl.CaseDescriptionImpl
     * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getCaseDescription()
     * @generated
     */
    EClass CASE_DESCRIPTION = eINSTANCE.getCaseDescription();

    /**
     * The meta object literal for the '<em><b>Case Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASE_DESCRIPTION__CASE_NAME = eINSTANCE.getCaseDescription_CaseName();

    /**
     * The meta object literal for the '<em><b>Steps</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASE_DESCRIPTION__STEPS = eINSTANCE.getCaseDescription_Steps();

    /**
     * The meta object literal for the '<em><b>Expect</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASE_DESCRIPTION__EXPECT = eINSTANCE.getCaseDescription_Expect();

    /**
     * The meta object literal for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.CaseNameImpl <em>Case Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.modes3.test.testLanguage.impl.CaseNameImpl
     * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getCaseName()
     * @generated
     */
    EClass CASE_NAME = eINSTANCE.getCaseName();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CASE_NAME__NAME = eINSTANCE.getCaseName_Name();

    /**
     * The meta object literal for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.StepsImpl <em>Steps</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.modes3.test.testLanguage.impl.StepsImpl
     * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getSteps()
     * @generated
     */
    EClass STEPS = eINSTANCE.getSteps();

    /**
     * The meta object literal for the '<em><b>Comment</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STEPS__COMMENT = eINSTANCE.getSteps_Comment();

    /**
     * The meta object literal for the '<em><b>Changed Turnout</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STEPS__CHANGED_TURNOUT = eINSTANCE.getSteps_ChangedTurnout();

    /**
     * The meta object literal for the '<em><b>Section</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STEPS__SECTION = eINSTANCE.getSteps_Section();

    /**
     * The meta object literal for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.CommentImpl <em>Comment</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.modes3.test.testLanguage.impl.CommentImpl
     * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getComment()
     * @generated
     */
    EClass COMMENT = eINSTANCE.getComment();

    /**
     * The meta object literal for the '<em><b>Comment</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMMENT__COMMENT = eINSTANCE.getComment_Comment();

    /**
     * The meta object literal for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.TurnoutImpl <em>Turnout</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.modes3.test.testLanguage.impl.TurnoutImpl
     * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getTurnout()
     * @generated
     */
    EClass TURNOUT = eINSTANCE.getTurnout();

    /**
     * The meta object literal for the '<em><b>Turnout State</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TURNOUT__TURNOUT_STATE = eINSTANCE.getTurnout_TurnoutState();

    /**
     * The meta object literal for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.SectionImpl <em>Section</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.modes3.test.testLanguage.impl.SectionImpl
     * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getSection()
     * @generated
     */
    EClass SECTION = eINSTANCE.getSection();

    /**
     * The meta object literal for the '<em><b>Straight Section</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SECTION__STRAIGHT_SECTION = eINSTANCE.getSection_StraightSection();

    /**
     * The meta object literal for the '<em><b>Divergent Section</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SECTION__DIVERGENT_SECTION = eINSTANCE.getSection_DivergentSection();

    /**
     * The meta object literal for the '<em><b>Top Section</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SECTION__TOP_SECTION = eINSTANCE.getSection_TopSection();

    /**
     * The meta object literal for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.StraightSectionImpl <em>Straight Section</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.modes3.test.testLanguage.impl.StraightSectionImpl
     * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getStraightSection()
     * @generated
     */
    EClass STRAIGHT_SECTION = eINSTANCE.getStraightSection();

    /**
     * The meta object literal for the '<em><b>Straight Section State</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRAIGHT_SECTION__STRAIGHT_SECTION_STATE = eINSTANCE.getStraightSection_StraightSectionState();

    /**
     * The meta object literal for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.DivergentSectionImpl <em>Divergent Section</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.modes3.test.testLanguage.impl.DivergentSectionImpl
     * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getDivergentSection()
     * @generated
     */
    EClass DIVERGENT_SECTION = eINSTANCE.getDivergentSection();

    /**
     * The meta object literal for the '<em><b>Divergent Section State</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DIVERGENT_SECTION__DIVERGENT_SECTION_STATE = eINSTANCE.getDivergentSection_DivergentSectionState();

    /**
     * The meta object literal for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.TopSectionImpl <em>Top Section</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.modes3.test.testLanguage.impl.TopSectionImpl
     * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getTopSection()
     * @generated
     */
    EClass TOP_SECTION = eINSTANCE.getTopSection();

    /**
     * The meta object literal for the '<em><b>Top Section State</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TOP_SECTION__TOP_SECTION_STATE = eINSTANCE.getTopSection_TopSectionState();

    /**
     * The meta object literal for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.ExpectationsImpl <em>Expectations</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.modes3.test.testLanguage.impl.ExpectationsImpl
     * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getExpectations()
     * @generated
     */
    EClass EXPECTATIONS = eINSTANCE.getExpectations();

    /**
     * The meta object literal for the '<em><b>Straight Expectation</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPECTATIONS__STRAIGHT_EXPECTATION = eINSTANCE.getExpectations_StraightExpectation();

    /**
     * The meta object literal for the '<em><b>Divergent Expectation</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPECTATIONS__DIVERGENT_EXPECTATION = eINSTANCE.getExpectations_DivergentExpectation();

    /**
     * The meta object literal for the '<em><b>Top Expectation</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPECTATIONS__TOP_EXPECTATION = eINSTANCE.getExpectations_TopExpectation();

    /**
     * The meta object literal for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.StraightExpectationImpl <em>Straight Expectation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.modes3.test.testLanguage.impl.StraightExpectationImpl
     * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getStraightExpectation()
     * @generated
     */
    EClass STRAIGHT_EXPECTATION = eINSTANCE.getStraightExpectation();

    /**
     * The meta object literal for the '<em><b>Straight Expected State</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRAIGHT_EXPECTATION__STRAIGHT_EXPECTED_STATE = eINSTANCE.getStraightExpectation_StraightExpectedState();

    /**
     * The meta object literal for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.DivergentExpectationImpl <em>Divergent Expectation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.modes3.test.testLanguage.impl.DivergentExpectationImpl
     * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getDivergentExpectation()
     * @generated
     */
    EClass DIVERGENT_EXPECTATION = eINSTANCE.getDivergentExpectation();

    /**
     * The meta object literal for the '<em><b>Divergent Expected State</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DIVERGENT_EXPECTATION__DIVERGENT_EXPECTED_STATE = eINSTANCE.getDivergentExpectation_DivergentExpectedState();

    /**
     * The meta object literal for the '{@link hu.bme.mit.modes3.test.testLanguage.impl.TopExpectationImpl <em>Top Expectation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see hu.bme.mit.modes3.test.testLanguage.impl.TopExpectationImpl
     * @see hu.bme.mit.modes3.test.testLanguage.impl.TestLanguagePackageImpl#getTopExpectation()
     * @generated
     */
    EClass TOP_EXPECTATION = eINSTANCE.getTopExpectation();

    /**
     * The meta object literal for the '<em><b>Top Expected State</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TOP_EXPECTATION__TOP_EXPECTED_STATE = eINSTANCE.getTopExpectation_TopExpectedState();

  }

} //TestLanguagePackage
