/**
 * generated by Xtext 2.9.1
 */
package hu.bme.mit.modes3.test.testLanguage.impl;

import hu.bme.mit.modes3.test.testLanguage.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class TestLanguageFactoryImpl extends EFactoryImpl implements TestLanguageFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static TestLanguageFactory init()
  {
    try
    {
      TestLanguageFactory theTestLanguageFactory = (TestLanguageFactory)EPackage.Registry.INSTANCE.getEFactory(TestLanguagePackage.eNS_URI);
      if (theTestLanguageFactory != null)
      {
        return theTestLanguageFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new TestLanguageFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TestLanguageFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case TestLanguagePackage.MODEL: return createModel();
      case TestLanguagePackage.CASE_DESCRIPTION: return createCaseDescription();
      case TestLanguagePackage.CASE_NAME: return createCaseName();
      case TestLanguagePackage.COMMENT: return createComment();
      case TestLanguagePackage.COMPONENT: return createComponent();
      case TestLanguagePackage.TURNOUT: return createTurnout();
      case TestLanguagePackage.SECTION: return createSection();
      case TestLanguagePackage.STRAIGHT_SECTION: return createStraightSection();
      case TestLanguagePackage.DIVERGENT_SECTION: return createDivergentSection();
      case TestLanguagePackage.TOP_SECTION: return createTopSection();
      case TestLanguagePackage.EXPECTATIONS: return createExpectations();
      case TestLanguagePackage.STRAIGHT_EXPECTATION: return createStraightExpectation();
      case TestLanguagePackage.DIVERGENT_EXPECTATION: return createDivergentExpectation();
      case TestLanguagePackage.TOP_EXPECTATION: return createTopExpectation();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CaseDescription createCaseDescription()
  {
    CaseDescriptionImpl caseDescription = new CaseDescriptionImpl();
    return caseDescription;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CaseName createCaseName()
  {
    CaseNameImpl caseName = new CaseNameImpl();
    return caseName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Comment createComment()
  {
    CommentImpl comment = new CommentImpl();
    return comment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Component createComponent()
  {
    ComponentImpl component = new ComponentImpl();
    return component;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Turnout createTurnout()
  {
    TurnoutImpl turnout = new TurnoutImpl();
    return turnout;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Section createSection()
  {
    SectionImpl section = new SectionImpl();
    return section;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StraightSection createStraightSection()
  {
    StraightSectionImpl straightSection = new StraightSectionImpl();
    return straightSection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DivergentSection createDivergentSection()
  {
    DivergentSectionImpl divergentSection = new DivergentSectionImpl();
    return divergentSection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TopSection createTopSection()
  {
    TopSectionImpl topSection = new TopSectionImpl();
    return topSection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expectations createExpectations()
  {
    ExpectationsImpl expectations = new ExpectationsImpl();
    return expectations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StraightExpectation createStraightExpectation()
  {
    StraightExpectationImpl straightExpectation = new StraightExpectationImpl();
    return straightExpectation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DivergentExpectation createDivergentExpectation()
  {
    DivergentExpectationImpl divergentExpectation = new DivergentExpectationImpl();
    return divergentExpectation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TopExpectation createTopExpectation()
  {
    TopExpectationImpl topExpectation = new TopExpectationImpl();
    return topExpectation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TestLanguagePackage getTestLanguagePackage()
  {
    return (TestLanguagePackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static TestLanguagePackage getPackage()
  {
    return TestLanguagePackage.eINSTANCE;
  }

} //TestLanguageFactoryImpl
