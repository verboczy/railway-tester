/**
 * generated by Xtext 2.9.1
 */
package hu.bme.mit.modes3.test.testLanguage.impl;

import hu.bme.mit.modes3.test.testLanguage.TestLanguagePackage;
import hu.bme.mit.modes3.test.testLanguage.Turnout;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Turnout</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link hu.bme.mit.modes3.test.testLanguage.impl.TurnoutImpl#getTurnoutID <em>Turnout ID</em>}</li>
 *   <li>{@link hu.bme.mit.modes3.test.testLanguage.impl.TurnoutImpl#getTurnoutState <em>Turnout State</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TurnoutImpl extends MinimalEObjectImpl.Container implements Turnout
{
  /**
   * The default value of the '{@link #getTurnoutID() <em>Turnout ID</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTurnoutID()
   * @generated
   * @ordered
   */
  protected static final int TURNOUT_ID_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getTurnoutID() <em>Turnout ID</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTurnoutID()
   * @generated
   * @ordered
   */
  protected int turnoutID = TURNOUT_ID_EDEFAULT;

  /**
   * The default value of the '{@link #getTurnoutState() <em>Turnout State</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTurnoutState()
   * @generated
   * @ordered
   */
  protected static final String TURNOUT_STATE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTurnoutState() <em>Turnout State</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTurnoutState()
   * @generated
   * @ordered
   */
  protected String turnoutState = TURNOUT_STATE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TurnoutImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TestLanguagePackage.Literals.TURNOUT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getTurnoutID()
  {
    return turnoutID;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTurnoutID(int newTurnoutID)
  {
    int oldTurnoutID = turnoutID;
    turnoutID = newTurnoutID;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TestLanguagePackage.TURNOUT__TURNOUT_ID, oldTurnoutID, turnoutID));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getTurnoutState()
  {
    return turnoutState;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTurnoutState(String newTurnoutState)
  {
    String oldTurnoutState = turnoutState;
    turnoutState = newTurnoutState;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TestLanguagePackage.TURNOUT__TURNOUT_STATE, oldTurnoutState, turnoutState));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TestLanguagePackage.TURNOUT__TURNOUT_ID:
        return getTurnoutID();
      case TestLanguagePackage.TURNOUT__TURNOUT_STATE:
        return getTurnoutState();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TestLanguagePackage.TURNOUT__TURNOUT_ID:
        setTurnoutID((Integer)newValue);
        return;
      case TestLanguagePackage.TURNOUT__TURNOUT_STATE:
        setTurnoutState((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TestLanguagePackage.TURNOUT__TURNOUT_ID:
        setTurnoutID(TURNOUT_ID_EDEFAULT);
        return;
      case TestLanguagePackage.TURNOUT__TURNOUT_STATE:
        setTurnoutState(TURNOUT_STATE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TestLanguagePackage.TURNOUT__TURNOUT_ID:
        return turnoutID != TURNOUT_ID_EDEFAULT;
      case TestLanguagePackage.TURNOUT__TURNOUT_STATE:
        return TURNOUT_STATE_EDEFAULT == null ? turnoutState != null : !TURNOUT_STATE_EDEFAULT.equals(turnoutState);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (turnoutID: ");
    result.append(turnoutID);
    result.append(", turnoutState: ");
    result.append(turnoutState);
    result.append(')');
    return result.toString();
  }

} //TurnoutImpl
